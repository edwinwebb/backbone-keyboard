/*! Backbone Keyboard - v0.1.0 - 2013-03-20
* https://github.com/edwin/backbone-keyboard
* Copyright (c) 2013 Edwin Webb; Licensed MIT */
Backbone.View.Keyboard=Backbone.View.extend({options:{keys:[["q","w","e","r","t","y","u","i","o","p"],["a","s","d","f","g","h","j","k","l"],["z","x","c","v","b","n","m"],[{id:"clear",label:"clear",action:function(){return""}},{id:"space",label:"space",action:function(t){return t+=" "}},{id:"backspace",label:"del",action:function(t){return t.slice(0,-1)}}]],targetSelector:"input.keyboard"},targ:void 0,actions:{},events:{"click .key":"clickHandler"},initialize:function(t){this.options=_.extend(this.options,t),this.setTarget($(this.options.targetSelector)),this.render()},render:function(){var t=[];_.forEach(this.options.keys,function(e){t.push('<div class="row">'),_.forEach(e,function(e){_.isObject(e)?t.push(this.makeSpecial(e)):t.push(this.makeKey(e))},this),t.push("</div>")},this),this.$el.html(t.join(""))},clickHandler:function(t){var e=t.currentTarget,a=this.targ.val()||"";e.hasAttribute("data-action")?this.targ.val(this.actions[e.getAttribute("data-action")](a)):this.addChar(t.currentTarget.innerText),t.preventDefault()},setTarget:function(t){var e=t;return 0===e.length&&console.warn("no keyboard target found"),this.targ=e,e},makeSpecial:function(t){return this.actions[t.id]=t.action,'<span class="key" data-action="'+t.id+'">'+t.label+"</span>"},makeKey:function(t){return'<span class="key">'+t+"</span>"},addChar:function(t){this.targ.val(this.targ.val()+t)}});